apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: build.helix
    name: build.helix
  spec:
    ports:
    - name: "4001"
      port: 4001
      targetPort: 1666
    selector:
      io.kompose.service: build.helix
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: p4d.helix
    name: p4d.helix
  spec:
    ports:
    - name: "4000"
      port: 4000
      targetPort: 1666
    selector:
      io.kompose.service: p4d.helix
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: p4p.helix
    name: p4p.helix
  spec:
    ports:
    - name: "4002"
      port: 4002
      targetPort: 1666
    selector:
      io.kompose.service: p4p.helix
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: swarm.helix
    name: swarm.helix
  spec:
    ports:
    - name: "5080"
      port: 5080
      targetPort: 80
    selector:
      io.kompose.service: swarm.helix
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: build.helix
    name: build.helix
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: build.helix
      spec:
        containers:
        - image: build.helix
          name: build.helix
          ports:
          - containerPort: 1666
          resources: {}
          tty: true
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: p4d.helix
    name: p4d.helix
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: p4d.helix
      spec:
        containers:
        - image: p4d.helix
          name: p4d.helix
          ports:
          - containerPort: 1666
          resources: {}
          tty: true
          volumeMounts:
          - mountPath: /p4
            name: p4d.helix-claim0
        restartPolicy: Always
        volumes:
        - name: p4d.helix-claim0
          persistentVolumeClaim:
            claimName: p4d.helix-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: p4d.helix-claim0
    name: p4d.helix-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: p4p.helix
    name: p4p.helix
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: p4p.helix
      spec:
        containers:
        - image: p4p.helix
          name: p4p.helix
          ports:
          - containerPort: 1666
          resources: {}
          tty: true
          volumeMounts:
          - mountPath: /p4
            name: p4p.helix-claim0
        restartPolicy: Always
        volumes:
        - name: p4p.helix-claim0
          persistentVolumeClaim:
            claimName: p4p.helix-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: p4p.helix-claim0
    name: p4p.helix-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o k8s.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: swarm.helix
    name: swarm.helix
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: swarm.helix
      spec:
        containers:
        - image: swarm.helix
          name: swarm.helix
          ports:
          - containerPort: 80
          resources: {}
          tty: true
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

